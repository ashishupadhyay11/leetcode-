class Solution {
public:
    int majorityElement(vector<int>& nums) {
        unordered_map<int,int>mp;
        int n = nums.size();
        for(int i=0; i<n; i++){
            if(mp.find(nums[i])!=mp.end())
                mp[nums[i]]++;
            else mp[nums[i]]=1;
        }
        for(auto it = mp.begin(); it!=mp.end(); it++){
            if(it->second > floor(n/2))
                return it->first;
        }
        return 0;
    }
};

//Moore's Voting algorithm
https://www.youtube.com/watch?v=AoX3BPWNnoE&list=PLgUwDviBIf0rPG3Ictpu74YWBQ1CaBkm2&index=15
class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int count =0, ele = 0, n = nums.size();
        for(int i=0; i<n;i++){
            if(count == 0)
                ele=nums[i];
            if(ele==nums[i])
                count+=1;
            else count-=1;
        }
        return ele;
    }
};