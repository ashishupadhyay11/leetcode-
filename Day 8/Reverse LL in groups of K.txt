struct node *reverse (struct node *head, int k){ 
    node *prev=NULL, *curr=head, *nextnode;
    int count = k;
    while(count-- && curr){
        nextnode = curr->next;
        curr->next = prev;
        prev = curr;
        curr = nextnode;
    }
    if(head) head -> next = reverse(nextnode, k);
    return prev;
}


ListNode* reverseKGroup(ListNode* head, int k) {
        if(head==NULL || k==1) return head;
        int num = 0;
        ListNode* preheader = new ListNode(-1);
        preheader->next = head;
        
        ListNode* cur = preheader, *nex, *pre = preheader;
        
        while(cur = cur->next)
            num++;
        while(num>=k){
            cur = pre->next;
            nex = cur->next;
            for(int i=1; i<k; i++){
                cur->next = nex->next;
                nex->next = pre->next;
                pre->next = nex;
                nex = cur->next;
            }
            pre=cur;
            num-=k;
        }
        return preheader->next;
    }