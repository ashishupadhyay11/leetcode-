class Solution {
public:
    int findsize(ListNode* node){
        int n=0;
        while(node)
            node=node->next, n++;
        return n;
    }
    ListNode *getIntersectionNode(ListNode *l1, ListNode *l2) {
        if(!l2 && !l2) return NULL;
        int size_l1 = findsize(l1);
        int size_l2 = findsize(l2);
        if(size_l2 > size_l1)
            swap(l1,l2), swap(size_l1, size_l2);
        
        for(int i=0; i<size_l1-size_l2; i++)
            if(l1->next)
                l1=l1->next;
        
        while(l1->next && l2->next && l1 != l2)
            l1 = l1->next, l2=l2->next;
        if(l1==l2)
            return l1;
        return NULL;
    }
};