https://www.youtube.com/watch?v=EHpS2TBfWQg
class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(!head) return NULL;
        Node* l1, *l2;
        
        for(l1=head; l1!=NULL; l1=l1->next->next){ //l1->next is actually l2 & l2->next = l1->next
                                                   //therefore we are basically moving one step at a time                                                    //in original list
            l2= new Node(l1->val);
            l2->next = l1->next;
            l1->next = l2;
        }
        Node* newHead = head ->next;
        
        for(l1=head; l1!=NULL; l1=l1->next->next)
            if(l1->random)
                l1->next->random/*(l2->random)*/ =  l1->random->next;  //Node in l2 which is pointed by                                                                          //random
        
        for(l1=head; l1!=NULL; l1=l1->next){        //Splice lists back into seperate lists
            l2= l1->next;
            l1->next = l2->next;
            if(l2->next)
                l2->next = l2->next->next;
        }
        return newHead;
    }
};