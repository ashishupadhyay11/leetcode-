https://leetcode.com/problems/median-of-two-sorted-arrays/discuss/2471/Very-concise-O(log(min(MN)))-iterative-solution-with-detailed-explanation
class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int n1 = nums1.size(), n2 = nums2.size();
        if(n1<n2) return findMedianSortedArrays(nums2, nums1); //make nums1 bigger
        
        int lo = 0, hi = n2*2;
        while(lo <= hi){
            int mid2 = (lo+hi)/2;
            int mid1 = n1 + n2 - mid2;
            
            double L1 = (mid1 == 0) ? INT_MIN : nums1[(mid1-1)/2]; //get L according to theory intuition
            double L2 = (mid2 == 0) ? INT_MIN : nums2[(mid2-1)/2];
            double R1 = (mid1 == n1*2) ? INT_MAX : nums1[mid1/2];	//get R according to theory intuition
            double R2 = (mid2 == n2*2) ? INT_MAX : nums2[mid2/2];
            
            if(L1 > R2)
                lo = mid2 + 1;
            else if (L2 > R1)
                hi = mid2 - 1;
            else return (max(L1,L2) + min (R1,R2))/2;
        }
        return -1;
    }
};