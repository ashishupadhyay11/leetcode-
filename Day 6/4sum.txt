https://www.youtube.com/watch?v=4ggF3tXIAp0
class Solution {
public:
    vector<vector<int>> fourSum(vector<int>&a, int target) {
        vector<vector<int>>result;
        if(a.empty())
            return result;
        sort(a.begin(), a.end());
        int n = a.size();

        for(int i=0; i<n;i++){
            for(int j=i+1; j<n; j++){
                int target2 = target - (a[i]+a[j]);
                int left = j+1, right=n-1;
                while(left<right){
                    int two_sum = a[right]+a[left];
                    if(two_sum > target2)
                        right--;
                    else if(two_sum < target2)
                        left++;
                    else{
                        vector<int>quad(4,0);
                        quad[0] = a[i];
                        quad[1] = a[j];
                        quad[2] = a[left];
                        quad[3] = a[right];
                        result.push_back(quad);
                        while(left<right && a[left] == quad[2])				//We have to find unique quads
                            left++;
                        while(left<right && a[right] == quad[3])
                            right--;
                    }
                }
                while(j+1 < n && a[j+1] == a[j])
                    j++;
            }
            while(i+1 < n && a[i+1] == a[i])
                i++;
        }
        return result;
    }
};