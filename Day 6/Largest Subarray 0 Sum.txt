vector<int> Solution::lszero(vector<int> &A) {
   unordered_map<int,int> mp;
   int maxl=0,l=-1,r=-1,sum=0;
   for(int i=0;i<A.size();i++)
   {
      sum+=A[i];
      if(mp.find(sum)==mp.end()) 
        mp[sum]=i;
      else
        if(maxl<i-mp[sum]) 				//Length of current 0sum subarray
            maxl=i-mp[sum] , l=mp[sum]+1 ,r=i;
         
      if(sum==0) 					//0sum subarray starts from index 0
        if(maxl<i+1) 
            maxl=i+1 , l=0 ,r=i;
   }
   vector<int> res;
   if(l!=-1&&r!=-1) 
        for(int i=l;i<=r;i++) 
            res.push_back(A[i]);
   return res;
}